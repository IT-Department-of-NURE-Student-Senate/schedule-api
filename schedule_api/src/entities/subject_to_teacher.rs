//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "subject_to_teacher")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub event_type: String,
    pub hours: i16,
    pub subject_id: i32,
    pub teacher_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::subject::Entity",
        from = "Column::SubjectId",
        to = "super::subject::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Subject,
    #[sea_orm(
        belongs_to = "super::teacher::Entity",
        from = "Column::TeacherId",
        to = "super::teacher::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Teacher,
}

impl Related<super::subject::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Subject.def()
    }
}

impl Related<super::teacher::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Teacher.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
